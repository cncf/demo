apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: ${ kubelet_image_url }:${ kubelet_image_tag }
    command:
    - /hyperkube
    - apiserver
    - --admission-control=NamespaceLifecycle
    - --admission-control=LimitRanger
    - --admission-control=ServiceAccount
    - --admission-control=DefaultStorageClass
    - --admission-control=ResourceQuota
    - --advertise-address=$private_ipv4
    - --apiserver-count=${ master_node_count }
    - --allow-privileged=true
    - --anonymous-auth=false
    - --client-ca-file=/etc/kubernetes/ssl/ca.pem
    - --enable-swagger-ui
    - --etcd-cafile=/etc/kubernetes/ssl/ca.pem
    - --etcd-certfile=/etc/kubernetes/ssl/k8s-etcd.pem
    - --etcd-keyfile=/etc/kubernetes/ssl/k8s-etcd-key.pem
    - --runtime-config=extensions/v1beta1/networkpolicies=true,batch/v2alpha1
    - --etcd-servers=https://etcd.${ internal_tld }:2379
    - --secure-port=443
    - --service-account-lookup
    - --service-account-private-key-file=/etc/kubernetes/ssl/k8s-apiserver-key.pem
    - --service-cluster-ip-range=${ service_cidr }
    - --tls-cert-file=/etc/kubernetes/ssl/k8s-apiserver.pem
    - --tls-private-key-file=/etc/kubernetes/ssl/k8s-apiserver-key.pem
    - --v=2
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        port: 8080
        path: /healthz
      initialDelaySeconds: 15
      timeoutSeconds: 15
    ports:
    - containerPort: 443
      hostPort: 443
      name: https
    - containerPort: 8080
      hostPort: 8080
      name: local
    volumeMounts:
    - mountPath: /etc/kubernetes/ssl
      name: ssl-certs-kubernetes
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ssl-certs-host
      readOnly: true
  volumes:
  - hostPath:
      path: /etc/kubernetes/ssl
    name: ssl-certs-kubernetes
  - hostPath:
      path: /usr/share/ca-certificates
    name: ssl-certs-host
